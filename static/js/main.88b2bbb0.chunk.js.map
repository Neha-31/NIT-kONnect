{"version":3,"sources":["firebase.js","component/auth/Login.js","features/questionSlice.js","features/userSlice.js","component/Post.js","component/QnaBox.js","component/Feed.js","component/Navbar.js","component/SidebarOptions.js","component/Sidebar.js","component/WidgetOptions.js","component/Widget.js","component/Qna.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","db","firestore","Login","useState","email","setEmail","password","setPassword","className","src","alt","onClick","signInWithPopup","catch","e","alert","message","console","log","style","color","cursor","value","onChange","target","type","placeholder","preventDefault","signInWithEmailAndPassword","then","createUserWithEmailAndPassword","fontSize","questionSlice","createSlice","name","initialState","questionId","questionName","reducers","setQuestionInfo","state","action","payload","actions","selectQuestionId","question","selectQuestionName","userSlice","user","login","logout","selectUser","Post","Id","image","timestamp","NITuser","useSelector","openModal","setOpenModal","dispatch","useDispatch","answer","setAnswer","getAnswers","setGetAnswers","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","answers","data","Avatar","photo","displayName","Date","toDate","toLocaleString","isOpen","onRequestClose","shouldCloseOnOverlayClick","overlay","width","height","backgroundColor","zIndex","top","left","marginTop","marginLeft","required","add","FieldValue","serverTimestamp","position","paddingBottom","display","right","ShareOutlined","MoreHorizOutlined","QnaBox","Feed","posts","setPosts","imageUrl","Navbar","input","setInput","inputUrl","setInputUrl","signOut","Button","disPlayName","ExpandMore","Input","Link","SidebarOptions","Add","Sidebar","WidgetOptions","Widget","Qna","App","onAuthStateChanged","authUser","uid","photoURL","store","configureStore","reducer","userReducer","questionReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88b2bbb0.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAYx5ZHeE6zYTAk7JogPfJ1yhEYiJpA1B0\",\r\n    authDomain: \"nit-konnect.firebaseapp.com\",\r\n    projectId: \"nit-konnect\",\r\n    storageBucket: \"nit-konnect.appspot.com\",\r\n    messagingSenderId: \"966668599449\",\r\n    appId: \"1:966668599449:web:e596d87f2948b8de99f808\",\r\n    measurementId: \"G-W5W27SB0JK\"\r\n  };\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const auth = firebase.auth();\r\n  \r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  const db = firebaseApp.firestore();\r\n  \r\n\r\n  export { auth, provider };\r\n  export default db;\r\n","import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { auth, provider } from \"../../firebase\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const signIn = () => {\r\n    auth.signInWithPopup(provider).catch((e) => {\r\n      alert(e.message);\r\n      console.log(auth);\r\n    });\r\n  };\r\n\r\n  const handleSignIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        console.log(auth);\r\n      })\r\n      .catch((e) => alert(e.message));\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n  };\r\n\r\n  const registerSignIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        if (auth) {\r\n          console.log(auth);\r\n        }\r\n      })\r\n      .catch((e) => alert(e.message));\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <div className=\"login__logo\">\r\n          <img\r\n            src=\"https://1.bp.blogspot.com/-yN68iYnyELE/YL344Z1VUdI/AAAAAAAAABY/UvDvzpAosX0exwUebJS34T7eyaEF_DcjgCLcBGAsYHQ/s364/qna_logo.png\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"login__desc\">\r\n          <p><h1>Discover, Share, Grow, Repeat!</h1>.</p>\r\n        </div>\r\n        <div className=\"login__auth\">\r\n          <div className=\"login__authOptions\">\r\n            <div className=\"login__authOption\">\r\n              <img\r\n                className=\"login__googleAuth\"\r\n                src=\"https://media-public.canva.com/MADnBiAubGA/3/screen.svg\"\r\n                alt=\"\"\r\n              />\r\n              <p onClick={signIn}>Continue With Google</p>\r\n            </div>\r\n            <div className=\"login__authOption\">\r\n              <img\r\n                className=\"login__googleAuth\"\r\n                src=\"https://1000logos.net/wp-content/uploads/2016/11/Facebook-logo-500x350.png\"\r\n                alt=\"\"\r\n              />\r\n              <span>Continue With Facebook</span>\r\n            </div>\r\n            <div className=\"login__authDesc\">\r\n              <p>\r\n                <span style={{ color: \"blue\", cursor: \"pointer\" }}>\r\n                  Sign Up With Email\r\n                </span>\r\n                . By continuing you indicate that you have read and agree to\r\n                NIT-koONect's\r\n                <span style={{ color: \"blue\", cursor: \"pointer\" }}>\r\n                  Terms of Service{\" \"}\r\n                </span>\r\n                and{\" \"}\r\n                <span style={{ color: \"blue\", cursor: \"pointer\" }}>\r\n                  Privacy Policy\r\n                </span>\r\n                .\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"login__emailPass\">\r\n            <div className=\"login__label\">\r\n              <h4>Login</h4>\r\n            </div>\r\n            <div className=\"login__inputFields\">\r\n              <div className=\"login__inputField\">\r\n                <input\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\"login__inputField\">\r\n                <input\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"login__forgButt\">\r\n              <small>Forgot Password?</small>\r\n              <button type=\"submit\" onClick={handleSignIn}>Login</button>\r\n            </div>\r\n            <button onClick={registerSignIn}>Register</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"login__lang\">\r\n          <p>हिन्दी</p>\r\n          <ArrowForwardIosIcon fontSize=\"small\" />\r\n        </div>\r\n        <div className=\"login__footer\">\r\n          <p>About</p>\r\n          <p>Languages</p>\r\n          <p>Careers</p>\r\n          <p>Businesses</p>\r\n          <p>Privacy</p>\r\n          <p>Terms</p>\r\n          <p>Contact</p>\r\n          <p>&copy; Project Krap</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const questionSlice = createSlice({\r\n  name: \"question\",\r\n  initialState: {\r\n    questionId: null,\r\n    questionName: null,\r\n  },\r\n  reducers: {\r\n    setQuestionInfo: (state, action) => {\r\n      state.questionId = action.payload.questionId;\r\n      state.questionName = action.payload.questionName;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setQuestionInfo } = questionSlice.actions;\r\n\r\nexport const selectQuestionId = (state) => state.question.questionId;\r\n\r\nexport const selectQuestionName = (state) => state.question.questionName;\r\nexport default questionSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import { Avatar } from '@material-ui/core'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../css/Post.css'\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\r\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\r\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\r\nimport Modal from 'react-modal';\r\nimport \"../css/Navbar.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport db from \"../firebase\";\r\nimport { selectQuestionId, selectQuestionName, setQuestionInfo } from \"../features/questionSlice\";\r\nimport firebase from \"firebase\";\r\nimport { selectUser } from \"../features/userSlice\";\r\n\r\n\r\n  \r\nfunction Post({Id, question,image, timestamp,NITuser})\r\n{\r\n    const user = useSelector(selectUser);\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const dispatch = useDispatch();\r\n\r\n    const questionId = useSelector(selectQuestionId);\r\n    const questionName = useSelector(selectQuestionName)\r\n     \r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [getAnswers, setGetAnswers] = useState([]);\r\n    useEffect(() => {\r\n        if (questionId) {\r\n          db.collection(\"questions\")\r\n            .doc(questionId)\r\n            .collection(\"answer\")\r\n            .orderBy(\"timestamp\", \"desc\")\r\n            .onSnapshot((snapshot) =>\r\n              setGetAnswers(\r\n                snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\r\n              )\r\n            );\r\n        }\r\n      }, [questionId]);\r\n  \r\n    const handleAnswer = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (questionId) {\r\n          db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\r\n            questionId: questionId,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            answer: answer,\r\n            user: user,\r\n          });\r\n        \r\n        console.log(questionId , questionName);\r\n        setAnswer(\" \");\r\n        setOpenModal(false);\r\n        }\r\n      };\r\n    \r\n  \r\n  return (\r\n    <div\r\n      className=\"post\"\r\n      onClick={() =>\r\n        dispatch(\r\n          setQuestionInfo({\r\n            questionId: Id,\r\n            questionName: question,\r\n          })\r\n        )\r\n      }\r\n    >\r\n      <div className=\"post_info\">\r\n        <Avatar\r\n        src= {NITuser.photo}/>\r\n        <h4>{NITuser.displayName?NITuser.displayName:NITuser.email}</h4>\r\n            <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\r\n            <div className=\"post_body\">\r\n                <div className= \"post_question\">\r\n                    <p>{question}</p>\r\n                    <button onClick ={() => setOpenModal(true)}\r\n                    className=\"post_button\">Answer\r\n                    </button>\r\n                    <Modal isOpen={openModal}\r\n                 onRequestClose= {()=>setOpenModal(false)}\r\n                 shouldCloseOnOverlayClick={false}\r\n                 style ={\r\n                     {\r\n                         overlay:{\r\n                             width : 600,\r\n                             height:550,\r\n                             backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                             zIndex:\"1000\",\r\n                             top:\"50%\",\r\n                             left: \"50%\",\r\n                             marginTop:\"-250px\",\r\n                             marginLeft:\"-350px\",\r\n                         },\r\n                     }\r\n                 }\r\n                 >\r\n                          \r\n                              <div className=\"modal_question\">\r\n              <h1>{question}</h1>\r\n              <p>\r\n                asked by\r\n                <span className=\"name\">\r\n                {NITuser.displayName ? NITuser.displayName : NITuser.email}\r\n                </span>{\" \"}\r\n                on\r\n                <span className=\"name\">\r\n                {new Date(timestamp?.toDate()).toLocaleString()}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"modal_answer\">\r\n              <textarea\r\n              required \r\n              value ={answer}\r\n              onChange={(e) => setAnswer(e.target.value)}\r\n                placeholder=\"Enter Your Answer\"\r\n                type=\"text\"\r\n              />\r\n                                \r\n                                  </div>\r\n                            \r\n                              <div className = \"modal__button\">\r\n                              <button className=\"cancel\" onClick={()=>setOpenModal(false)}>Cancel</button>\r\n\r\n                              <button type =\"submit\" onClick={handleAnswer} className=\"add\">\r\n                                  Submit Your Answer\r\n                              </button>\r\n\r\n                              </div>\r\n\r\n                        </Modal>\r\n                      \r\n                 \r\n                </div>\r\n                <div className= \"post_ans\">\r\n                {getAnswers.map(({ id, answers }) => (\r\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\r\n              {Id === answers.questionId ? (\r\n                <span>\r\n                  {answers.answer}\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      color: \"gray\",\r\n                      fontSize: \"small\",\r\n                      display: \"flex\",\r\n                      right: \"0px\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#b92b27\" }}>\r\n                      {answers.user.displayName\r\n                        ? answers.user.displayName\r\n                        : answers.user.email}{\" \"}\r\n                      on{\" \"}\r\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\r\n                    </span>\r\n                  </span>\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </p>\r\n          ))}\r\n\r\n                </div>\r\n                <img src ={image}\r\n                alt=\"\"/>\r\n\r\n            </div>\r\n            <div className= \"post_footer\">\r\n                <div className= \"post_footerAction\">\r\n                    <ArrowUpwardOutlinedIcon />\r\n                    <ArrowDownwardOutlinedIcon />\r\n                </div>\r\n                <RepeatOutlinedIcon />\r\n                <ChatBubbleOutlineOutlinedIcon />\r\n                <div className= \"post_footerLeft\">\r\n                    <ShareOutlined />\r\n                    <MoreHorizOutlined />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default Post;","import { Avatar } from '@material-ui/core';\r\nimport React from 'react'\r\nimport '../css/QnaBox.css';\r\nimport { useSelector} from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nfunction QnaBox() {\r\n    const user = useSelector(selectUser)\r\n    return (\r\n        <div className =\"qnaBox\">\r\n         <div className =\"qnaBox_info \">\r\n             <Avatar src ={user.photo}/>\r\n             <h5>{user.displayName}</h5>\r\n\r\n         </div>\r\n         <div className =\"qnaBox_qna\">\r\n             <p>\r\n                 What is your question or link?\r\n             </p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QnaBox","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/Feed.css\";\r\nimport db from \"../firebase\";\r\nimport Post from \"./Post\";\r\nimport QnaBox from \"./QnaBox\";\r\n\r\nfunction Feed() {\r\n    const [posts,setPosts]= useState([])\r\n    useEffect(()=>{\r\n        db.collection('questions').orderBy('timestamp',\"desc\").onSnapshot(snapshot=>setPosts(snapshot.docs.map((doc)=>\r\n        (({\r\n            id:doc.id,\r\n            question:doc.data()\r\n        })))))\r\n    },[])\r\n    return(\r\n    <div className =\"Feed\">\r\n        <QnaBox/>\r\n        {\r\n        posts.map(({id,question})=>(\r\n            <Post \r\n            key ={id}\r\n            Id={id}\r\n            image= {question.imageUrl}\r\n            question ={question.question}\r\n            timestamp = {question.timestamp}\r\n            NITuser={question.user}/>\r\n        ))}\r\n\r\n    </div>\r\n);\r\n\r\n}\r\nexport default Feed;","import React, { useState } from 'react'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport '../css/Navbar.css'\r\nimport FeaturedPlayListOutlinedIcon from '@material-ui/icons/FeaturedPlayListOutlined'\r\nimport AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined'\r\nimport PeopleAltOutlinedIcon  from '@material-ui/icons/PeopleAltOutlined'\r\nimport NotificationsOutlinedIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport LanguageIcon from '@material-ui/icons/Language'\r\nimport { Button, Input } from '@material-ui/core';\r\nimport \"../css/Navbar.css\";\r\nimport { selectUser } from '../features/userSlice'\r\nimport { useSelector } from 'react-redux'\r\nimport Modal from 'react-modal'\r\nimport db,{auth} from \"../firebase\";\r\nimport { ExpandMore, Link } from '@material-ui/icons'\r\nimport firebase from 'firebase'\r\n\r\n\r\nfunction Navbar() {\r\n    const user= useSelector(selectUser)\r\n    const [openModal, setOpenModal]=useState(false)\r\n    const [input, setInput] = useState(\"\");\r\n    const [inputUrl, setInputUrl] = useState(\"\");\r\n    const questionName = input;\r\n    const handleQuestion = (e) => {\r\n        e.preventDefault();\r\n        setOpenModal(false);\r\n    \r\n        if (questionName) {\r\n          db.collection(\"questions\").add({\r\n            user: user,\r\n            question: input,\r\n            imageUrl: inputUrl,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          });\r\n        }\r\n    \r\n        setInput(\"\");\r\n        setInputUrl(\"\");\r\n      };\r\n    return (\r\n        <div className =\"Navbar\">\r\n        <div className=\"qHeader_logo\">\r\n        <img src=\"https://1.bp.blogspot.com/-yN68iYnyELE/YL344Z1VUdI/AAAAAAAAABY/UvDvzpAosX0exwUebJS34T7eyaEF_DcjgCLcBGAsYHQ/s364/qna_logo.png\" alt=\"\"/>\r\n         <div className = \"qHeader_icons\">\r\n             <div className =\"qHeader_icon\">\r\n                 <HomeIcon/>\r\n             </div>\r\n             <div className =\"qHeader_icon\">\r\n               <FeaturedPlayListOutlinedIcon/>  \r\n             </div>\r\n             <div className =\"qHeader_icon\">\r\n               <AssignmentTurnedInOutlinedIcon/>  \r\n             </div>\r\n             <div className =\"qHeader_icon\">\r\n                <PeopleAltOutlinedIcon/>\r\n             </div>\r\n             <div className =\"qHeader_icon\">\r\n                <NotificationsOutlinedIcon/> \r\n             </div>\r\n             <div className =\"qHeader_input\">\r\n                <SearchIcon/> \r\n                <input type = \"text\" placeholder =\"Ask and get enriched\"/>\r\n             </div>\r\n             <div className = \"qHeader_Rem\">\r\n                 <div className = \"qHeader_avatar\">\r\n                     <Avatar onClick={()=>auth.signOut()}src= {user.photo}/>\r\n                 </div>\r\n                 <LanguageIcon/>\r\n                 <Button onClick={()=> setOpenModal(true)}>Ask Question</Button>\r\n                 <Modal isOpen={openModal}\r\n                 onRequestClose= {()=>setOpenModal(false)}\r\n                 shouldCloseOnOverlayClick={false}\r\n                 style ={\r\n                     { \r\n                         overlay:{\r\n                             width : 700,\r\n                             height: 600,\r\n                             backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                             zIndex:\"1000\",\r\n                             top:\"50%\",\r\n                             left: \"50%\",\r\n                             marginTop:\"-300px\",\r\n                             marginLeft:\"-350px\",\r\n                         },\r\n                     }\r\n                 }\r\n                 >\r\n                          <div className=\"modal__title\">\r\n                              <h5>Ask Question</h5>\r\n                              <h5>Share Link</h5>\r\n                              </div>\r\n                              <div className=\"modal__info\">\r\n                                  <Avatar className= \"avatar\"\r\n                                  src = {user.photo}\r\n                                  />\r\n                                  <p> {user.disPlayName? user.disPlayName:user.email}asked\r\n                                  </p>\r\n                                  <div className= \"modal__scope\"><PeopleAltOutlinedIcon/>\r\n                                  <p>Public</p>\r\n                                  <ExpandMore/>\r\n                                  </div>\r\n                              </div>\r\n                              <div className= \"modal__Field\">\r\n                                  <Input\r\n                                   \r\n                                   value={input}\r\n                                   onChange={(e) => setInput(e.target.value)}\r\n                                  type =\"text\"\r\n                                  placeholder=\"Ask Questions and Get Enriched\"\r\n                                  />\r\n                              <div className= \"modal__fieldLink\">\r\n                                  <Link/>\r\n                                  <input \r\n                                  value={inputUrl}\r\n                                  onChange={(e) => setInputUrl(e.target.value)}\r\n                                  type =\"text\"\r\n                                  placeholder=\"Include link of context if needed (Optional)\"\r\n                                  ></input>\r\n                                  </div>\r\n                              </div>\r\n                              <div className = \"modal__buttons\">\r\n                              <button className=\"cancel\" onClick={()=>setOpenModal(false)}>close</button>\r\n                              <button type =\"submit\" onClick={handleQuestion} className=\"add\">\r\n                                  Submit Your Query\r\n                              </button>\r\n\r\n                              </div>\r\n\r\n                        \r\n                      </Modal>\r\n                  </div>\r\n                  </div>\r\n                  </div>\r\n              </div>\r\n    );\r\n}\r\nexport default Navbar;","import { Add } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport '../css/SidebarOptions.css';\r\nfunction SidebarOptions() {\r\n    return (\r\n        <div className = \"SidebarOptions\">\r\n            <div className = \"SidebarOption\">\r\n                <img \r\n                src= \"https://static.vecteezy.com/system/resources/previews/001/252/133/non_2x/light-bulb-icon-vector.jpg\"\r\n                alt= \"\" width=\"25\" height=\"20\"/>\r\n                <p>Ideas</p>\r\n             </div>\r\n             <div className = \"SidebarOption\">\r\n                <img \r\n                src= \"https://images.shiksha.com/mediadata/images/1488190632phpzn94a5.jpeg\"\r\n                alt= \"\" width=\"25\" height=\"20\"/>\r\n                <p>NIT's Culture</p>\r\n             </div>\r\n             <div className = \"SidebarOption\">\r\n                <img \r\n                src= \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS2WF05Nz1-0dGeDHa5Cl1Nj7rKKv_aO8oN6qzom8is_UbASZM26p5WBsFvKXJ43d_v3to&usqp=CAU\"\r\n                alt= \"\" width=\"25\" height=\"20\"/>\r\n                <p>College Experiencs</p>\r\n             </div>\r\n             <div className = \"SidebarOption\">\r\n                <img \r\n                src= \"https://appliedmachinelearning.files.wordpress.com/2018/04/interview_exp.jpg\"\r\n                alt= \"\" width=\"25\" height=\"20\"/>\r\n                <p>Interview Experiencs</p>\r\n             </div>\r\n             <div className = \"SidebarOption\">\r\n                <img \r\n                src= \"http://questionsofdifference.com/wp-content/uploads/2020/04/opportunity3.jpg\"\r\n                alt= \"\" width=\"25\" height=\"20\"/>\r\n                <p>Opportunities</p>\r\n             </div>\r\n             <div className = \"SidebarOption\">\r\n                <img \r\n                src= \"https://spiderimg.amarujala.com/assets/images/2016/09/05/job_1473068678.jpeg\"\r\n                alt= \"\" width=\"25\" height=\"20\"/>\r\n                <p>Internships/Jobs</p>\r\n             </div>\r\n             <div className = \"SidebarOption\">\r\n                <img \r\n                src= \"https://icon-library.com/images/discover-icon/discover-icon-7.jpg\"\r\n                alt= \"\" width=\"25\" height=\"20\"/>\r\n                <Add />\r\n                <p>Discover</p>\r\n             </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default SidebarOptions","import React from 'react';\r\nimport SidebarOptions from './SidebarOptions';\r\nimport '../css/Sidebar.css';\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n           <SidebarOptions/> \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\r\nimport '../css/WidgetOptions.css';\r\nfunction WidgetOptions() {\r\n    return (\r\n      <div className=\"widget_contents\">\r\n        <div className=\"widget_content\">\r\n          <img\r\n            src=\"https://qphs.fs.quoracdn.net/main-thumb-ti-1737435-100-jxcfmjdvwvpkcketifttdmeeimxcatua.jpeg\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"widget_contentTitle\">\r\n            <h5>Mobile App Programmer</h5>\r\n            <p>The best Mobile App Development Company</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"widget_content\">\r\n          <img\r\n            src=\"https://qphs.fs.quoracdn.net/main-thumb-ti-1574818-100-mzdwostcualpwcxekyrvyqqpychetdoc.jpeg\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"widget_contentTitle\">\r\n            <h5>Quota of Quotes</h5>\r\n            <p>Daily dosage of unforgettable lines from ...</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"widget_content\">\r\n          <img\r\n            src=\"https://qphs.fs.quoracdn.net/main-thumb-ti-1644613-100-ydflucgoeztbhwyurtmlqqrgfqmjmhpl.jpeg\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"widget_contentTitle\">\r\n            <h5>Art & Artist</h5>\r\n            <p>A Space retated to creating, practicing an...</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"widget_content\">\r\n          <img\r\n            src=\"https://qphs.fs.quoracdn.net/main-thumb-ti-1647318-100-kmwvqbpzatmylibelrowrerfqbspekwo.jpeg\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"widget_contentTitle\">\r\n            <h5>Friedrich Nietzche</h5>\r\n            <p>A Space dedicated to great work of Friedrich...</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"widget_content\">\r\n          <img\r\n            src=\"https://qphs.fs.quoracdn.net/main-thumb-ti-1578647-100-xkggvbyzfkvzhyklewtkjijefekqbazb.jpeg\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"widget_contentTitle\">\r\n            <h5>Stock Market Strategies</h5>\r\n            <p>Everything about investing in Stock...</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"widget_content\">\r\n          <img\r\n            src=\"https://qphs.fs.quoracdn.net/main-thumb-ti-1711686-100-glvgnbatdxpjbhrkyphlfamqrryfccvp.jpeg\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"widget_contentTitle\">\r\n            <h5>Architecture World</h5>\r\n            <p>All about civil architecture...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default WidgetOptions\r\n","import React from 'react'\r\nimport WidgetOptions from './WidgetOptions'\r\n\r\nfunction Widget() {\r\n    return (\r\n        <div className=\"widget\">\r\n            <div className = \" widget_header\">\r\n                <h5>Spaces to follow</h5>\r\n            </div>\r\n            <div className=\"widget_contents\">\r\n        <WidgetOptions />\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widget\r\n","\r\nimport React from 'react';\r\nimport \"../css/Qna.css\";\r\nimport Feed from './Feed';\r\nimport Navbar from \"./Navbar\";\r\nimport Slidebar from './Sidebar';\r\nimport Widget from './Widget';\r\nfunction Qna() {\r\n  return (\r\n    <div className=\"qna\">\r\n         <Navbar/>\r\n      <div className=\"qna_content\">\r\n      <Slidebar/>\r\n      <Feed/>\r\n      <Widget/>\r\n    </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Qna;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Login from \"./component/auth/Login\";\nimport Qna from \"./component/Qna\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            email: authUser.email,\n            displayName: authUser.displayName,\n            photo: authUser.photoURL,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n      console.log(authUser);\n    });\n  }, [dispatch]);\n  return <div className=\"App\">{user ? <Qna /> : <Login />}</div>;\n}\n\nexport default App;\n\n","import {configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\nimport questionReducer from '../features/questionSlice'\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    question: questionReducer\n  },\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}